name: Owner App CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'apps/owner/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - '.github/workflows/owner-ci-cd.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'dev'
          - 'prod'

# 워크플로우에 필요한 권한 추가
permissions:
  contents: read
  pull-requests: write
  issues: write
  statuses: write

jobs:
  test:
    name: 테스트
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/owner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
        working-directory: ./ # 루트에서 pnpm install 실행 (워크스페이스 전체 설치)

      - name: Run tests
        run: pnpm --filter o2o-owner test

  build:
    name: 빌드 검사
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./apps/owner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
        working-directory: ./ # 루트에서 실행

      - name: Build Next.js app
        run: pnpm --filter o2o-owner build

  deploy-preview:
    name: Vercel 개발 환경 배포
    runs-on: ubuntu-latest
    needs: [test, build]
    outputs:
      deployment-url: ${{ steps.vercel-deploy.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Vercel 프로젝트 루트 설정
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Preview)
        id: vercel-deploy
        run:
          DEPLOYMENT_URL=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_OWNER }}

      - name: Comment PR with Preview URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `✅ Owner 앱 개발 환경 배포 완료: ${process.env.DEPLOYMENT_URL}`
            })
        env:
          DEPLOYMENT_URL: ${{ steps.vercel-deploy.outputs.url }}

  # 수동 워크플로우 - Vercel 개발 환경 배포
  manual-deploy-dev:
    name: 수동 Vercel Dev 배포
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Vercel 프로젝트 루트 설정
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Dev)
        run:
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_OWNER }}

  # 수동 워크플로우 - Vercel 프로덕션 환경 배포
  manual-deploy-prod:
    name: 수동 Vercel Prod 배포
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Vercel 프로젝트 루트 설정
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Production)
        run:
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --prod --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_OWNER }} 